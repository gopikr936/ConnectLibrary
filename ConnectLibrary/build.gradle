plugins {
    id 'com.android.library'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'maven-publish'
}

// Load secrets keystore
def secretPropertiesFile = rootProject.file("secrets.properties")
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretPropertiesFile))

def artifactId = 'infinity-lib'
def groupId = 'in.eko.connectlib'
android {
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33
        versionCode 76
        versionName "1.0"

        buildConfigField("String", "razorpay_api_key", secretProperties["razorpay_api_key"])
        buildConfigField("String", "attestation_key", secretProperties['attestation_key'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'

    implementation 'com.google.firebase:firebase-bom:32.0.0'
    implementation 'com.google.firebase:firebase-config:21.4.0'
    api 'com.google.firebase:firebase-messaging:23.1.2'
    implementation 'com.google.firebase:firebase-crashlytics:18.3.7'
    implementation 'com.google.firebase:firebase-analytics:21.2.2'

    implementation 'com.google.android.play:core:1.10.3'
    implementation 'com.google.android.gms:play-services-auth:20.5.0'
    implementation 'com.google.android.gms:play-services-safetynet:18.0.1'
    implementation 'com.google.android.gms:play-services-analytics:18.0.2'


    implementation 'org.greenrobot:eventbus:3.3.1'
    implementation "androidx.security:security-crypto:1.0.0"          // Encrypted Shared Pref
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    api 'com.github.ekoindia:android-uidai-rdservice-manager:1.3.1'
    api 'com.razorpay:checkout:1.6.30'

    //noinspection GradleDependency
    implementation 'com.google.android.gms:play-services-ads-identifier:17.0.1'
    implementation 'androidx.browser:browser:1.5.0'
    implementation 'com.google.firebase:firebase-core:21.1.1'

    implementation project(":leegality")
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.firebase:firebase-dynamic-links:21.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
//
//project.afterEvaluate {
//    publishing {
//        publications {
//            library(MavenPublication) {
//                setGroupId groupId
//                setArtifactId artifactId
//                version android.defaultConfig.versionName
//
//                artifact bundleReleaseAar
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//
//                    // Iterate over the implementation dependencies (we don't want the test ones),
//                    // adding a <dependency> node for each
//                    configurations.implementation.allDependencies.each {
//                        // Ensure dependencies such as fileTree are not included in the pom.
//                        if (it.name != 'unspecified') {
//                            def dependencyNode = dependenciesNode.appendNode('dependency')
//                            dependencyNode.appendNode('groupId', it.group)
//                            dependencyNode.appendNode('artifactId', it.name)
//                            dependencyNode.appendNode('version', it.version)
//                        }
//                    }
//                }
//            }
//        }
//    }
//}
//
//secrets {
//    propertiesFileName = "secrets.properties"
//}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                // You can then customize attributes of the publication as shown below.
                groupId = 'infinity-lib'
                artifactId = 'in.eko.connectlib'
                version = '1.0.0'
            }
        }
    }
}